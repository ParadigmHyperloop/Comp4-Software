// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: States.proto

#ifndef PROTOBUF_INCLUDED_States_2eproto
#define PROTOBUF_INCLUDED_States_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_States_2eproto 

namespace protobuf_States_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_States_2eproto

enum BrakeNodeStates {
  bnsBooting = 0,
  bnsStandby = 1,
  bnsArming = 2,
  bnsArmed = 3,
  bnsFlight = 4,
  bnsBraking = 5,
  bnsVenting = 6,
  bnsRetrieval = 7,
  bnsError = 8
};
bool BrakeNodeStates_IsValid(int value);
const BrakeNodeStates BrakeNodeStates_MIN = bnsBooting;
const BrakeNodeStates BrakeNodeStates_MAX = bnsError;
const int BrakeNodeStates_ARRAYSIZE = BrakeNodeStates_MAX + 1;

const ::google::protobuf::EnumDescriptor* BrakeNodeStates_descriptor();
inline const ::std::string& BrakeNodeStates_Name(BrakeNodeStates value) {
  return ::google::protobuf::internal::NameOfEnum(
    BrakeNodeStates_descriptor(), value);
}
inline bool BrakeNodeStates_Parse(
    const ::std::string& name, BrakeNodeStates* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BrakeNodeStates>(
    BrakeNodeStates_descriptor(), name, value);
}
enum PodStates {
  psBooting = 0,
  psStandby = 1,
  psArming = 2,
  psArmed = 3,
  psPreFlight = 4,
  psAcceleration = 5,
  psCoasting = 6,
  psBraking = 7,
  psDisarming = 8,
  psRetrieval = 9,
  psEmergency = 10
};
bool PodStates_IsValid(int value);
const PodStates PodStates_MIN = psBooting;
const PodStates PodStates_MAX = psEmergency;
const int PodStates_ARRAYSIZE = PodStates_MAX + 1;

const ::google::protobuf::EnumDescriptor* PodStates_descriptor();
inline const ::std::string& PodStates_Name(PodStates value) {
  return ::google::protobuf::internal::NameOfEnum(
    PodStates_descriptor(), value);
}
inline bool PodStates_Parse(
    const ::std::string& name, PodStates* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PodStates>(
    PodStates_descriptor(), name, value);
}
enum MotorStates {
  msOff = 0,
  msCharging = 1,
  msIdle = 2,
  msEngaged = 3
};
bool MotorStates_IsValid(int value);
const MotorStates MotorStates_MIN = msOff;
const MotorStates MotorStates_MAX = msEngaged;
const int MotorStates_ARRAYSIZE = MotorStates_MAX + 1;

const ::google::protobuf::EnumDescriptor* MotorStates_descriptor();
inline const ::std::string& MotorStates_Name(MotorStates value) {
  return ::google::protobuf::internal::NameOfEnum(
    MotorStates_descriptor(), value);
}
inline bool MotorStates_Parse(
    const ::std::string& name, MotorStates* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotorStates>(
    MotorStates_descriptor(), name, value);
}
enum ControlsInterfaceStates {
  ciArm = 0,
  ciFlight = 1,
  ciEmergencyStop = 2
};
bool ControlsInterfaceStates_IsValid(int value);
const ControlsInterfaceStates ControlsInterfaceStates_MIN = ciArm;
const ControlsInterfaceStates ControlsInterfaceStates_MAX = ciEmergencyStop;
const int ControlsInterfaceStates_ARRAYSIZE = ControlsInterfaceStates_MAX + 1;

const ::google::protobuf::EnumDescriptor* ControlsInterfaceStates_descriptor();
inline const ::std::string& ControlsInterfaceStates_Name(ControlsInterfaceStates value) {
  return ::google::protobuf::internal::NameOfEnum(
    ControlsInterfaceStates_descriptor(), value);
}
inline bool ControlsInterfaceStates_Parse(
    const ::std::string& name, ControlsInterfaceStates* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ControlsInterfaceStates>(
    ControlsInterfaceStates_descriptor(), name, value);
}
enum InverterStates {
  iConnected = 0
};
bool InverterStates_IsValid(int value);
const InverterStates InverterStates_MIN = iConnected;
const InverterStates InverterStates_MAX = iConnected;
const int InverterStates_ARRAYSIZE = InverterStates_MAX + 1;

const ::google::protobuf::EnumDescriptor* InverterStates_descriptor();
inline const ::std::string& InverterStates_Name(InverterStates value) {
  return ::google::protobuf::internal::NameOfEnum(
    InverterStates_descriptor(), value);
}
inline bool InverterStates_Parse(
    const ::std::string& name, InverterStates* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InverterStates>(
    InverterStates_descriptor(), name, value);
}
enum BatteryManagementStates {
  bmsNominal = 0
};
bool BatteryManagementStates_IsValid(int value);
const BatteryManagementStates BatteryManagementStates_MIN = bmsNominal;
const BatteryManagementStates BatteryManagementStates_MAX = bmsNominal;
const int BatteryManagementStates_ARRAYSIZE = BatteryManagementStates_MAX + 1;

const ::google::protobuf::EnumDescriptor* BatteryManagementStates_descriptor();
inline const ::std::string& BatteryManagementStates_Name(BatteryManagementStates value) {
  return ::google::protobuf::internal::NameOfEnum(
    BatteryManagementStates_descriptor(), value);
}
inline bool BatteryManagementStates_Parse(
    const ::std::string& name, BatteryManagementStates* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BatteryManagementStates>(
    BatteryManagementStates_descriptor(), name, value);
}
enum RearNodeStates {
  rnBooting = 0,
  rnNominal = 1
};
bool RearNodeStates_IsValid(int value);
const RearNodeStates RearNodeStates_MIN = rnBooting;
const RearNodeStates RearNodeStates_MAX = rnNominal;
const int RearNodeStates_ARRAYSIZE = RearNodeStates_MAX + 1;

const ::google::protobuf::EnumDescriptor* RearNodeStates_descriptor();
inline const ::std::string& RearNodeStates_Name(RearNodeStates value) {
  return ::google::protobuf::internal::NameOfEnum(
    RearNodeStates_descriptor(), value);
}
inline bool RearNodeStates_Parse(
    const ::std::string& name, RearNodeStates* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RearNodeStates>(
    RearNodeStates_descriptor(), name, value);
}
enum LvdcNodeStates {
  lvdcBooting = 0
};
bool LvdcNodeStates_IsValid(int value);
const LvdcNodeStates LvdcNodeStates_MIN = lvdcBooting;
const LvdcNodeStates LvdcNodeStates_MAX = lvdcBooting;
const int LvdcNodeStates_ARRAYSIZE = LvdcNodeStates_MAX + 1;

const ::google::protobuf::EnumDescriptor* LvdcNodeStates_descriptor();
inline const ::std::string& LvdcNodeStates_Name(LvdcNodeStates value) {
  return ::google::protobuf::internal::NameOfEnum(
    LvdcNodeStates_descriptor(), value);
}
inline bool LvdcNodeStates_Parse(
    const ::std::string& name, LvdcNodeStates* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LvdcNodeStates>(
    LvdcNodeStates_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::BrakeNodeStates> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BrakeNodeStates>() {
  return ::BrakeNodeStates_descriptor();
}
template <> struct is_proto_enum< ::PodStates> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PodStates>() {
  return ::PodStates_descriptor();
}
template <> struct is_proto_enum< ::MotorStates> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MotorStates>() {
  return ::MotorStates_descriptor();
}
template <> struct is_proto_enum< ::ControlsInterfaceStates> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ControlsInterfaceStates>() {
  return ::ControlsInterfaceStates_descriptor();
}
template <> struct is_proto_enum< ::InverterStates> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::InverterStates>() {
  return ::InverterStates_descriptor();
}
template <> struct is_proto_enum< ::BatteryManagementStates> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BatteryManagementStates>() {
  return ::BatteryManagementStates_descriptor();
}
template <> struct is_proto_enum< ::RearNodeStates> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RearNodeStates>() {
  return ::RearNodeStates_descriptor();
}
template <> struct is_proto_enum< ::LvdcNodeStates> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LvdcNodeStates>() {
  return ::LvdcNodeStates_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_States_2eproto
