// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PodCommand.proto

#ifndef PROTOBUF_INCLUDED_PodCommand_2eproto
#define PROTOBUF_INCLUDED_PodCommand_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "States.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_PodCommand_2eproto 

namespace protobuf_PodCommand_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_PodCommand_2eproto
namespace pds {
class podCommand;
class podCommandDefaultTypeInternal;
extern podCommandDefaultTypeInternal _podCommand_default_instance_;
}  // namespace pds
namespace google {
namespace protobuf {
template<> ::pds::podCommand* Arena::CreateMaybeMessage<::pds::podCommand>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pds {

// ===================================================================

class podCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pds.podCommand) */ {
 public:
  podCommand();
  virtual ~podCommand();

  podCommand(const podCommand& from);

  inline podCommand& operator=(const podCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  podCommand(podCommand&& from) noexcept
    : podCommand() {
    *this = ::std::move(from);
  }

  inline podCommand& operator=(podCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const podCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const podCommand* internal_default_instance() {
    return reinterpret_cast<const podCommand*>(
               &_podCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(podCommand* other);
  friend void swap(podCommand& a, podCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline podCommand* New() const final {
    return CreateMaybeMessage<podCommand>(NULL);
  }

  podCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<podCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const podCommand& from);
  void MergeFrom(const podCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(podCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ControlsInterfaceStates controlsInterfaceState = 1;
  bool has_controlsinterfacestate() const;
  void clear_controlsinterfacestate();
  static const int kControlsInterfaceStateFieldNumber = 1;
  ::ControlsInterfaceStates controlsinterfacestate() const;
  void set_controlsinterfacestate(::ControlsInterfaceStates value);

  // optional .PodStates manualPodState = 2;
  bool has_manualpodstate() const;
  void clear_manualpodstate();
  static const int kManualPodStateFieldNumber = 2;
  ::PodStates manualpodstate() const;
  void set_manualpodstate(::PodStates value);

  // optional .BrakeNodeStates manualBrakeNodeState = 3;
  bool has_manualbrakenodestate() const;
  void clear_manualbrakenodestate();
  static const int kManualBrakeNodeStateFieldNumber = 3;
  ::BrakeNodeStates manualbrakenodestate() const;
  void set_manualbrakenodestate(::BrakeNodeStates value);

  // optional .MotorStates manualMotorState = 4;
  bool has_manualmotorstate() const;
  void clear_manualmotorstate();
  static const int kManualMotorStateFieldNumber = 4;
  ::MotorStates manualmotorstate() const;
  void set_manualmotorstate(::MotorStates value);

  // optional .LvdcNodeStates manualLvdcNodeState = 5;
  bool has_manuallvdcnodestate() const;
  void clear_manuallvdcnodestate();
  static const int kManualLvdcNodeStateFieldNumber = 5;
  ::LvdcNodeStates manuallvdcnodestate() const;
  void set_manuallvdcnodestate(::LvdcNodeStates value);

  // optional bool automaticStateTransitions = 6;
  bool has_automaticstatetransitions() const;
  void clear_automaticstatetransitions();
  static const int kAutomaticStateTransitionsFieldNumber = 6;
  bool automaticstatetransitions() const;
  void set_automaticstatetransitions(bool value);

  // @@protoc_insertion_point(class_scope:pds.podCommand)
 private:
  void set_has_controlsinterfacestate();
  void clear_has_controlsinterfacestate();
  void set_has_manualpodstate();
  void clear_has_manualpodstate();
  void set_has_manualbrakenodestate();
  void clear_has_manualbrakenodestate();
  void set_has_manualmotorstate();
  void clear_has_manualmotorstate();
  void set_has_manuallvdcnodestate();
  void clear_has_manuallvdcnodestate();
  void set_has_automaticstatetransitions();
  void clear_has_automaticstatetransitions();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int controlsinterfacestate_;
  int manualpodstate_;
  int manualbrakenodestate_;
  int manualmotorstate_;
  int manuallvdcnodestate_;
  bool automaticstatetransitions_;
  friend struct ::protobuf_PodCommand_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// podCommand

// optional .ControlsInterfaceStates controlsInterfaceState = 1;
inline bool podCommand::has_controlsinterfacestate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void podCommand::set_has_controlsinterfacestate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void podCommand::clear_has_controlsinterfacestate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void podCommand::clear_controlsinterfacestate() {
  controlsinterfacestate_ = 0;
  clear_has_controlsinterfacestate();
}
inline ::ControlsInterfaceStates podCommand::controlsinterfacestate() const {
  // @@protoc_insertion_point(field_get:pds.podCommand.controlsInterfaceState)
  return static_cast< ::ControlsInterfaceStates >(controlsinterfacestate_);
}
inline void podCommand::set_controlsinterfacestate(::ControlsInterfaceStates value) {
  assert(::ControlsInterfaceStates_IsValid(value));
  set_has_controlsinterfacestate();
  controlsinterfacestate_ = value;
  // @@protoc_insertion_point(field_set:pds.podCommand.controlsInterfaceState)
}

// optional .PodStates manualPodState = 2;
inline bool podCommand::has_manualpodstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void podCommand::set_has_manualpodstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void podCommand::clear_has_manualpodstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void podCommand::clear_manualpodstate() {
  manualpodstate_ = 0;
  clear_has_manualpodstate();
}
inline ::PodStates podCommand::manualpodstate() const {
  // @@protoc_insertion_point(field_get:pds.podCommand.manualPodState)
  return static_cast< ::PodStates >(manualpodstate_);
}
inline void podCommand::set_manualpodstate(::PodStates value) {
  assert(::PodStates_IsValid(value));
  set_has_manualpodstate();
  manualpodstate_ = value;
  // @@protoc_insertion_point(field_set:pds.podCommand.manualPodState)
}

// optional .BrakeNodeStates manualBrakeNodeState = 3;
inline bool podCommand::has_manualbrakenodestate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void podCommand::set_has_manualbrakenodestate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void podCommand::clear_has_manualbrakenodestate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void podCommand::clear_manualbrakenodestate() {
  manualbrakenodestate_ = 0;
  clear_has_manualbrakenodestate();
}
inline ::BrakeNodeStates podCommand::manualbrakenodestate() const {
  // @@protoc_insertion_point(field_get:pds.podCommand.manualBrakeNodeState)
  return static_cast< ::BrakeNodeStates >(manualbrakenodestate_);
}
inline void podCommand::set_manualbrakenodestate(::BrakeNodeStates value) {
  assert(::BrakeNodeStates_IsValid(value));
  set_has_manualbrakenodestate();
  manualbrakenodestate_ = value;
  // @@protoc_insertion_point(field_set:pds.podCommand.manualBrakeNodeState)
}

// optional .MotorStates manualMotorState = 4;
inline bool podCommand::has_manualmotorstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void podCommand::set_has_manualmotorstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void podCommand::clear_has_manualmotorstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void podCommand::clear_manualmotorstate() {
  manualmotorstate_ = 0;
  clear_has_manualmotorstate();
}
inline ::MotorStates podCommand::manualmotorstate() const {
  // @@protoc_insertion_point(field_get:pds.podCommand.manualMotorState)
  return static_cast< ::MotorStates >(manualmotorstate_);
}
inline void podCommand::set_manualmotorstate(::MotorStates value) {
  assert(::MotorStates_IsValid(value));
  set_has_manualmotorstate();
  manualmotorstate_ = value;
  // @@protoc_insertion_point(field_set:pds.podCommand.manualMotorState)
}

// optional .LvdcNodeStates manualLvdcNodeState = 5;
inline bool podCommand::has_manuallvdcnodestate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void podCommand::set_has_manuallvdcnodestate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void podCommand::clear_has_manuallvdcnodestate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void podCommand::clear_manuallvdcnodestate() {
  manuallvdcnodestate_ = 0;
  clear_has_manuallvdcnodestate();
}
inline ::LvdcNodeStates podCommand::manuallvdcnodestate() const {
  // @@protoc_insertion_point(field_get:pds.podCommand.manualLvdcNodeState)
  return static_cast< ::LvdcNodeStates >(manuallvdcnodestate_);
}
inline void podCommand::set_manuallvdcnodestate(::LvdcNodeStates value) {
  assert(::LvdcNodeStates_IsValid(value));
  set_has_manuallvdcnodestate();
  manuallvdcnodestate_ = value;
  // @@protoc_insertion_point(field_set:pds.podCommand.manualLvdcNodeState)
}

// optional bool automaticStateTransitions = 6;
inline bool podCommand::has_automaticstatetransitions() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void podCommand::set_has_automaticstatetransitions() {
  _has_bits_[0] |= 0x00000020u;
}
inline void podCommand::clear_has_automaticstatetransitions() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void podCommand::clear_automaticstatetransitions() {
  automaticstatetransitions_ = false;
  clear_has_automaticstatetransitions();
}
inline bool podCommand::automaticstatetransitions() const {
  // @@protoc_insertion_point(field_get:pds.podCommand.automaticStateTransitions)
  return automaticstatetransitions_;
}
inline void podCommand::set_automaticstatetransitions(bool value) {
  set_has_automaticstatetransitions();
  automaticstatetransitions_ = value;
  // @@protoc_insertion_point(field_set:pds.podCommand.automaticStateTransitions)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace pds

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_PodCommand_2eproto
