syntax = "proto2";

import "states.proto"
package pds;

message telemetry {

// States
    optional podStates podState = 1;
    optional breakNodeStates breakNodeState = 2;
    optional motorStates motorState = 3;
    optional controlsInterfaceStates controlsInterfaceState = 4;
    optional inverterStates inverterState = 5;


    optional int32 missionTime = 3;
    optional int32 flightTime = 4;


    optional int32 terminalHeartbeatFlag = 7;




    optional int32 podPosition = 11;
    optional int32 podVelocity = 12;
    optional int32 podAccelerationX = 13;
    optional int32 podAccelerationY = 14;
    optional int32 podAccelerationZ = 15;

    optional int32 imuVelocity = 16;
    optional int32 imuAccelerationX = 33;

    optional int32 tachometerVelocity = 17;
    optional int32 resolverVelocity = 33;



    optional int32 inverterTemperature1 = 23;
    optional int32 inverterTemperature2 = 24;
    optional int32 inverterTemperature3 = 25;
    optional int32 motorCurrent = 27;
    optional int32 motorVoltage = 28;
    optional int32 inverterVoltages = 29;
    optional int32 inverterCurrents = 44;
    //optional int32 inverterInternalStates = 30;


    optional batteryManagementStates batteryManagementState = 31;
    repeated int32 batteryPackVoltages = 32;
    repeated int32 batteryPackCurrent = 33;
    repeated int32 batteryCellTemperatures = 34;
    optional int32 batteryPackMinimumVoltage = 35;
    optional int32 batteryPackMaxVoltage = 36;


    optional podStates breakNodePerceivedPodState = 3;
    optional bool sol1 = 2;
    optional bool sol2 = 3;
    optional bool sol3 = 4;
    optional bool sol4 = 5;
    optional bool sol5 = 6;
    optional bool sol6 = 7;
    optional int32 hp  = 8;
    optional int32 lp1 = 9;
    optional int32 lp2 = 10;
    optional int32 lp3 = 11;
    optional int32 lp4 = 12;
    optional int32 pressureVesselTemperature = 13;


    optional int32 electronicsEnclosurePressure = 10;
    optional int32 railDisplacementX = 10;
    optional int32 railDisplacementY = 10;


    optional rearNodeStates rearNodeState = 10;
    optional int32 tubePressure = 10;
    optional int32 coolantPressure1 = 10;
    optional int32 coolantPressure2 = 10;
    optional int32 coolantPressure3 = 10;
    optional int32 coolantTemperature = 10;
    optional int32 railTemperature = 10;


    optional int32 watchdogTimerValue = 6;


}

